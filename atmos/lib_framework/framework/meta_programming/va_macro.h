
#pragma once

#include <framework/utility/string_utils.h>
#include <string_view>

#define VA_MACRO(base, ...) VA_MACRO_IMPL(base, GET_ARG_COUNT(__VA_ARGS__), (__VA_ARGS__))
#define VA_MACRO_IMPL(base, count, args) VA_MACRO_IMPL_(base, count, args)
#define VA_MACRO_IMPL_(base, count, args) base##count##args

#ifdef _MSC_VER // microsoft compilers

#   define GET_ARG_COUNT(...)  INTERNAL_EXPAND_ARGS_PRIVATE(INTERNAL_ARGS_AUGMENTER(__VA_ARGS__))
#   define INTERNAL_ARGS_AUGMENTER(...) unused, __VA_ARGS__
#   define INTERNAL_EXPAND(x) x
#   define INTERNAL_EXPAND_ARGS_PRIVATE(...) INTERNAL_EXPAND(INTERNAL_GET_ARG_COUNT_PRIVATE(__VA_ARGS__, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))
#   define INTERNAL_GET_ARG_COUNT_PRIVATE(_1_, _2_, _3_, _4_, _5_, _6_, _7_, _8_, _9_, _10_, _11_, _12_, _13_, _14_, _15_, _16_, _17_, _18_, _19_, _20_, _21_, _22_, _23_, _24_, _25_, _26_, _27_, _28_, _29_, _30_, _31_, _32_, _33_, _34_, _35_, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, count, ...) count

#else // non-microsoft compilers

#   define GET_ARG_COUNT(...) INTERNAL_GET_ARG_COUNT_PRIVATE(0, ## __VA_ARGS__, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
#   define INTERNAL_GET_ARG_COUNT_PRIVATE(_0, _1_, _2_, _3_, _4_, _5_, _6_, _7_, _8_, _9_, _10_, _11_, _12_, _13_, _14_, _15_, _16_, _17_, _18_, _19_, _20_, _21_, _22_, _23_, _24_, _25_, _26_, _27_, _28_, _29_, _30_, _31_, _32_, _33_, _34_, _35_, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, count, ...) count

#endif

#define VA_DISTRIBUTE_OP(   OP,    ... ) VA_MACRO(VA_DISTRIBUTE_OP, OP, __VA_ARGS__)
#define VA_DISTRIBUTE_OP1(  OP ) 
#define VA_DISTRIBUTE_OP2(  OP, X, ... ) OP(X)
#define VA_DISTRIBUTE_OP3(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP2(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP4(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP3(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP5(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP4(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP6(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP5(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP7(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP6(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP8(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP7(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP9(  OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP8(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP10( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP9(  OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP11( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP10( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP12( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP11( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP13( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP12( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP14( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP13( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP15( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP14( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP16( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP15( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP17( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP16( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP18( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP17( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP19( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP18( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP20( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP19( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP21( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP20( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP22( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP21( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP23( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP22( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP24( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP23( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP25( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP24( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP26( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP25( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP27( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP26( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP28( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP27( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP29( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP28( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP30( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP29( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP31( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP30( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP32( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP31( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP33( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP32( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP34( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP33( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP35( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP34( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP36( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP35( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP37( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP36( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP38( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP37( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP39( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP38( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP40( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP39( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP41( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP40( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP42( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP41( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP43( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP42( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP44( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP43( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP45( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP44( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP46( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP45( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP47( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP46( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP48( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP47( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP49( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP48( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP50( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP49( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP51( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP50( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP52( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP51( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP53( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP52( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP54( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP53( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP55( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP54( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP56( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP55( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP57( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP56( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP58( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP57( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP59( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP58( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP60( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP59( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP61( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP60( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP62( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP61( OP, __VA_ARGS__ ))
#define VA_DISTRIBUTE_OP63( OP, X, ... ) OP(X)  INTERNAL_EXPAND(VA_DISTRIBUTE_OP62( OP, __VA_ARGS__ ))


#define VA_DISTRIBUTE_PRE(   PRE,    ... ) VA_MACRO(VA_DISTRIBUTE_PRE, PRE, __VA_ARGS__)
#define VA_DISTRIBUTE_PRE1(  PRE         )
#define VA_DISTRIBUTE_PRE2(  PRE, X      )        INTERNAL_EXPAND(PRE X)
#define VA_DISTRIBUTE_PRE3(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE2(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE4(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE3(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE5(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE4(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE6(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE5(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE7(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE6(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE8(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE7(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE9(  PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE8(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE10( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE9(  PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE11( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE10( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE12( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE11( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE13( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE12( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE14( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE13( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE15( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE14( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE16( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE15( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE17( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE16( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE18( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE17( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE19( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE18( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE20( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE19( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE21( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE20( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE22( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE21( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE23( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE22( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE24( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE23( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE25( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE24( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE26( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE25( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE27( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE26( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE28( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE27( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE29( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE28( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE30( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE29( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE31( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE30( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE32( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE31( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE33( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE32( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE34( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE33( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE35( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE34( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE36( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE35( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE37( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE36( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE38( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE37( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE39( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE38( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE40( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE39( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE41( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE40( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE42( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE41( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE43( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE42( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE44( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE43( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE45( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE44( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE46( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE45( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE47( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE46( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE48( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE47( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE49( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE48( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE50( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE49( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE51( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE50( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE52( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE51( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE53( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE52( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE54( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE53( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE55( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE54( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE56( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE55( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE57( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE56( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE58( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE57( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE59( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE58( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE60( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE59( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE61( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE60( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE62( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE61( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE63( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE62( PRE, __VA_ARGS__ ))
#define VA_DISTRIBUTE_PRE64( PRE, X, ... ) PRE X  INTERNAL_EXPAND(VA_DISTRIBUTE_PRE63( PRE, __VA_ARGS__ ))



#define ENUM_SERIALIZABLE(ENUM, DEF, VAL, ...)\
ENUM_SERIALIZABLE_(ENUM, DEF, VAL, __VA_ARGS__)

#define ENUM_SERIALIZABLE_(ENUM, DEF, ...) \
ENUM_DECL		(ENUM, DEF, __VA_ARGS__) \
ENUM_IS_VALID 	(ENUM, __VA_ARGS__) \
ENUM_TO_STR		(ENUM, __VA_ARGS__) \
ENUM_FROM_STR	(ENUM, DEF, __VA_ARGS__)


#define ENUM_DECL_DEFAULT(DEF) DEF

#define ENUM_DECL(NAME, DEF, ...)\
	enum class NAME : uint32_t {\
		ENUM_LIST(__VA_ARGS__)\
		DEFAULT = NAME::ENUM_DECL_##DEF\
	};

	#define ENUM_LIST(...) VA_DISTRIBUTE_PRE(ENUM_LIST_, __VA_ARGS__)
	#define ENUM_LIST_(x, y) x = y,

#define ENUM_IS_VALID(ENUM, ...)\
	constexpr static const bool is_valid(ENUM s)\
	{\
		using enum_t = ENUM;\
		switch (s)\
		{\
			ENUM_IS_VALID_CASE(__VA_ARGS__)\
		default: return false;\
		}\
	}

	#define ENUM_IS_VALID_CASE(...) VA_DISTRIBUTE_PRE(case enum_t::ENUM_IS_VALID_CASE_UNPACK, __VA_ARGS__)
	#define ENUM_IS_VALID_CASE_UNPACK(NAME,INIT) NAME: return true;

#define ENUM_TO_STR(ENUM, ...)\
	constexpr static std::string_view to_string(ENUM s)\
	{\
		using enum_t = ENUM;\
		switch (s)\
		{\
			ENUM_TO_STR_CASE(__VA_ARGS__)\
		default: return #ENUM"::<UNRECOGNIZED_VALUE>";\
		}\
	}

	#define ENUM_TO_STR_CASE(...) VA_DISTRIBUTE_PRE(case enum_t::ENUM_TO_STR_CASE_UNPACK, __VA_ARGS__)
	#define ENUM_TO_STR_CASE_UNPACK(NAME,INIT) NAME: return #NAME;

#define ENUM_FROM_STR(ENUM, DEF, ...)\
	constexpr static ENUM ENUM_from_string(const std::string_view s, ENUM fallback = ENUM::ENUM_DECL_##DEF)\
	{\
		using enum_t = ENUM;\
		switch (string_utils::c_hash_32(s.data()))\
		{\
			ENUM_FROM_STR_CASE(__VA_ARGS__)\
		default: return fallback;\
		}\
	}

	#define ENUM_FROM_STR_CASE(...) VA_DISTRIBUTE_PRE(case string_utils::c_hash_32 ENUM_FROM_STR_CASE_UNPACK, __VA_ARGS__)
	#define ENUM_FROM_STR_CASE_UNPACK(NAME,INIT) (#NAME): return enum_t::NAME;